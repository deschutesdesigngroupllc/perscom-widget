name: Deploy Widget

env:
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
  SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-west-2

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: (contains(github.ref, 'tags') && ! contains(github.ref, 'prerelease')) || github.ref == 'refs/heads/master'
    environment:
      name: production
      url: https://widget.perscom.io
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Version
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Widget
        run: npm run build
        env:
          API_URL: https://api.staging.perscom.io/v2/widgets/

      - name: Copy Artifacts To S3
        run: aws s3 sync ./dist s3://${{ secrets.AWS_BUCKET_NAME_PRODUCTION }} --delete

      - name: Create Sentry Release
        uses: getsentry/action-release@v3
        with:
          environment: production
          version: ${{ env.VERSION }}
          sourcemaps: ./dist

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID_PRODUCTION }}
          PATHS: "/*"

  staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: contains(github.ref, 'prerelease') || github.ref == 'refs/heads/staging'
    environment:
      name: staging
      url: https://widget.staging.perscom.io
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Get Version
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Widget
        run: npm run build
        env:
          API_URL: https://api.perscom.io/v2/widgets/

      - name: Copy Artifacts To S3
        run: aws s3 sync ./dist s3://${{ secrets.AWS_BUCKET_NAME_STAGING }} --delete

      - name: Create Sentry Release
        uses: getsentry/action-release@v3
        with:
          environment: staging
          version: ${{ env.VERSION }}
          sourcemaps: ./dist

      - name: Invalidate CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID_STAGING }}
          PATHS: "/*"